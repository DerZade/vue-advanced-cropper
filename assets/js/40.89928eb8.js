(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{482:function(e,t,o){e.exports=o.p+"assets/img/drag-event-overview.808c9c06.svg"},483:function(e,t,o){e.exports=o.p+"assets/img/drag-event-problem.e4c829a6.svg"},484:function(e,t,o){e.exports=o.p+"assets/img/drag-event-bad-result.e3bf5c21.svg"},485:function(e,t,o){e.exports=o.p+"assets/img/drag-event-good-result.1dd1d65d.svg"},486:function(e,t,o){e.exports=o.p+"assets/img/drag-event-shift-method.4fad2aaf.svg"},654:function(e,t,o){"use strict";o.r(t);var s=o(41),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"drag-event"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drag-event"}},[e._v("#")]),e._v(" Drag Event")]),e._v(" "),s("p",[e._v("The drag event is the event that emmits during dragging the different elements like handlers, lines and etc. It emits, for example, by "),s("RouterLink",{attrs:{to:"/events/'/components/draggable-element.html"}},[e._v("DraggableElement")]),e._v(" component.")],1),e._v(" "),s("p",[e._v("This event is represented by "),s("code",[e._v("DragEvent")]),e._v(" class instance that has four fields:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("nativeEvent")]),e._v(" is the literally last native event related to this drag event")]),e._v(" "),s("li",[s("code",[e._v("element")]),e._v(" is the DOM element that was dragged")]),e._v(" "),s("li",[s("code",[e._v("position")]),e._v(" is the last position of cursor / touch represented by object with "),s("code",[e._v("left")]),e._v(" and "),s("code",[e._v("top")]),e._v(" fields relative to window")]),e._v(" "),s("li",[s("code",[e._v("previousPosition")]),e._v(" is the previos position of cursor / touch represented by object with "),s("code",[e._v("left")]),e._v(" and "),s("code",[e._v("top")]),e._v(" fields relative to window")]),e._v(" "),s("li",[s("code",[e._v("anchor")]),e._v(" is the geometry coordinates of the point in the handler where touch was started, it is represented by object with "),s("code",[e._v("left")]),e._v(", "),s("code",[e._v("top")]),e._v(", "),s("code",[e._v("right")]),e._v(" and "),s("code",[e._v("bottom")]),e._v(" fields and constant during the current dragging period")])]),e._v(" "),s("p",[s("img",{attrs:{src:o(482),alt:"Overview"}})]),e._v(" "),s("h2",{attrs:{id:"anchor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anchor"}},[e._v("#")]),e._v(" Anchor")]),e._v(" "),s("p",[e._v("The anchor is the most misunderstood part of drag event. So let's investigate why is it needed.")]),e._v(" "),s("p",[e._v("The right approach to build a stencil resize algorithm is assuming that you don't know anything about the previous cursor / touch position. You just know current position of cursor / touch and current coordinates of handler.")]),e._v(" "),s("p",[s("img",{attrs:{src:o(483),alt:"Overview"}})]),e._v(" "),s("p",[e._v("We should resize stencil in a such way that the mouse cursor will be in "),s("strong",[e._v("the exactly same point")]),e._v(" of handler where user ends dragging. That's is what he anticipates.")]),e._v(" "),s("p",[e._v("But if we know only position the following result is the best result that we can ever get.")]),e._v(" "),s("p",[s("img",{attrs:{src:o(484),alt:"Overview"}})]),e._v(" "),s("p",[e._v("That's the moment when you need to use "),s("code",[e._v("anchor")]),e._v(". You just reduce or increase your resize box by anchor coordinates")]),e._v(" "),s("p",[s("img",{attrs:{src:o(485),alt:"Overview"}})]),e._v(" "),s("h2",{attrs:{id:"shift-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift-method"}},[e._v("#")]),e._v(" Shift method")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("DragEvent")]),e._v(" instances have method "),s("code",[e._v("shift()")]),e._v(" that will accurately calculate the resize shift corresponding to an anchor, a cursor / touch position and a handler position.")]),e._v(" "),s("p",[s("img",{attrs:{src:o(486),alt:"Internal structure"}})]),e._v(" "),s("p",[e._v("It returns the object with fields "),s("code",[e._v("left")]),e._v(" and "),s("code",[e._v("top")]),e._v(". They will be negative if the corresponding position is decreasing and positive if the corresponding position is increasing.")]),e._v(" "),s("p",[e._v("For example, "),s("code",[e._v("left")]),e._v(" is positive and "),s("code",[e._v("top")]),e._v(" is negative at the picture above.")])])}),[],!1,null,null,null);t.default=i.exports}}]);